# /proc/sys/net/core/*

# 启用 BPF 实时 （JIT） 编译器
# BPF 是一种灵活的和高效的基础设施，允许在各种钩点
# 它被用于许多 Linux 内核子系统，例如作为网络（例如 XDP、tc）、跟踪（例如 kprobes、uprobes、tracepoints）和安全性（例如 seccomp）
# LLVM 有一个可以编译的 BPF 后端将 C 限制为一系列 BPF 指令
# 程序加载后通过 bpf（2） 并在内核中传递一个验证器，然后 JIT 将将这些 BPF 程序转换为本机 CPU 指令。
# 0 - 禁用 JIT（默认值）
# 1 - 启用 JIT
# 2 - 启用 JIT 并要求编译器在内核日志上发出跟踪
# net.core.bpf_jit_enable = 1

# 强化 BPF JIT 编译器
# 启用强化会牺牲性能，但可以减少 JIT 喷洒
# 0 - 禁用 JIT 强化（默认值）
# 1 - 仅为非特权用户启用 JIT 强化
# 2 - 为所有用户启用 JIT 强化
net.core.bpf_jit_harden  =  2
