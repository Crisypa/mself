# 控制内核是否应收集有关 BPF 程序的统计信息
# 统计信息会导致每个程序的性能略有下降
# 可以使用 "bpftool" 查看统计信息
# 0 不收集统计信息（默认）
# 1 收集统计信息
# bpf_stats_enabled =

# 限制访问 proc 文件系统中的内核指针
# 1 将针对没有 CAP_SYSLOG 的普通用户隐藏 /proc/kallsyms 中的内核符号地址
# 2 将隐藏 /proc/kallsyms 中的内核符号地址，而忽略用户的权限
# kernel.kptr_restrict = 1

# NMI（不可屏蔽中断）看门狗是一个调试特性，用于捕捉导致内核 panic 的硬件中断。
# 在某些系统上，它会产生大量的中断，导致用电量明显增加
kernel.nmi_watchdog = 0

# 决定在 kernel panic 时的重启策略
# <0 立即重新启动
# 0 不重新启动
# >0 秒后重新启动
kernel.panic = 16

# 此选项可用于在支持此功能的体系结构 上选择进程地址的类型 系统中使用的空间随机化
# 0 关闭进程地址空间随机化
#   这是 无论如何都不支持此功能的体系结构以及使用“norandmaps”参数引导的内核的默认值
# 1 使 mmap base、stack 和 VDSO 页面的地址随机化 除其他外，这意味着共享库将是 加载到随机地址
#   对于 PIE 链接的二进制文件， 代码开始的位置是随机的。 如果 "CONFIG_COMPAT_BRK" 选项已启用
# 2 此外，启用堆随机化 This is the default if CONFIG_COMPAT_BRK is disabled
# kernel.randomize_va_space =

# 启用/禁用能源感知调度 （EAS）
# EAS 开始 在可以运行的平台上自动运行（即 具有非对称 CPU 拓扑结构且具有 Energy 的平台 型号可用）
# 如果您的平台恰好满足 EAS 的要求，但您不想使用它，请更改 此值设置为 0
# 在非 EAS 平台上，写入操作失败且 Read 不返回任何内容
# kernel.sched_energy_aware

# 启用/禁用调度程序统计信息
# 启用此功能 在调度程序中产生少量开销，但 对于调试和性能优化很有用
# kernel.sched_schedstats

# 启用神奇的 SysRq 键
# 0 - 完全禁用 sysrq
# 1 - 启用 sysrq 的所有功能
# >1 - 允许的 sysrq 函数的位掩码
#   2 =   0x2 - enable control of console logging level
#   4 =   0x4 - enable control of keyboard (SAK, unraw)
#   8 =   0x8 - enable debugging dumps of processes etc.
#  16 =  0x10 - enable sync command
#  32 =  0x20 - enable remount read-only
#  64 =  0x40 - enable signalling of processes (term, kill, oom-kill)
# 128 =  0x80 - allow reboot/poweroff
# 256 = 0x100 - allow nicing of all RT tasks
kernel.sysrq = 1

# 0 启用"bpf()"非特权调用
# 1 非特权调用 "bpf()" 被禁用而不恢复
# 2 禁用非特权调用 "bpf()"
# kernel.unprivileged_bpf_disabled = 0
kernel.unprivileged_bpf_disabled = 2
